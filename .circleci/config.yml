version: 2
jobs:
  test:
    working_directory: ~/app
    docker:
      - image: circleci/golang:1.14
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-{{ .Branch }}-{{ checksum "go.mod" }}
      - restore_cache:
          keys:
            - build-cache-{{ .Branch }}-{{ .Revision }}
      - run: make modules
      - save_cache:
          key: go-mod-{{ .Branch }}-{{ checksum "go.mod" }}
          paths:
            - ~/pkg/mod/cache
      - run: make test
      - save_cache:
          key: build-cache-{{ .Branch }}-{{ .Revision }}
          paths:
            - /.cache/go-build

  build_and_deploy:
    working_directory: ~/app
    docker:
      - image: circleci/golang:1.14
    steps:
      - checkout
      - run: make build_linux BUILD_NAME=bot
      - run: ssh -o StrictHostKeyChecking=no ${USER_NAME}@${HOST_NAME} './stop-bot.sh'
      - run: scp ~/app/bot ${USER_NAME}@${HOST_NAME}:~/deploybot
      - run: ssh ${USER_NAME}@${HOST_NAME} './start-bot.sh'

workflows:
  version: 2
  test:
    jobs:
      - test
      - build_and_deploy:
          requires:
            - test
          filters:
            branches:
              only: master
